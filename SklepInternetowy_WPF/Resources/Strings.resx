<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppTitle" xml:space="preserve">
    <value>Candy Shop</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="WelcomeMessage" xml:space="preserve">
    <value>Welcome, {0}!</value>
  </data>
  <data name="InvalidCredentials" xml:space="preserve">
    <value>Invalid credentials! Please try again.</value>
  </data>
  <data name="UsernameEmpty" xml:space="preserve">
    <value>Username cannot be empty.</value>
  </data>
  <data name="PasswordEmpty" xml:space="preserve">
    <value>Password cannot be empty.</value>
  </data>
  <data name="RegistrationSuccess" xml:space="preserve">
    <value>User {0} has been successfully registered!</value>
  </data>
  <data name="RegistrationFailed" xml:space="preserve">
    <value>Registration failed: {0}</value>
  </data>
  <data name="ProductName" xml:space="preserve">
    <value>Product Name</value>
  </data>
  <data name="AllCategories" xml:space="preserve">
    <value>All Categories</value>
  </data>
  <data name="NoSorting" xml:space="preserve">
    <value>No Sorting</value>
  </data>
  <data name="PriceAscending" xml:space="preserve">
    <value>Price Ascending</value>
  </data>
  <data name="PriceDescending" xml:space="preserve">
    <value>Price Descending</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="Action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="AddToCart" xml:space="preserve">
    <value>Add to Cart</value>
  </data>
  <data name="AddedToCart" xml:space="preserve">
    <value>{0} added to cart!</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Polish" xml:space="preserve">
    <value>Polish</value>
  </data>
  <data name="ShowWindow" xml:space="preserve">
    <value>Show Window</value>
  </data>
	<data name="OrderHistory" xml:space="preserve">
  <value>Order History</value>
</data>
	<data name="OrderDate" xml:space="preserve">
  <value>Order Date</value>
</data>
	<data name="Products" xml:space="preserve">
  <value>Products</value>
</data>
	<data name="ShoppingCart" xml:space="preserve">
  <value>Shopping Cart</value>
</data>
	<data name="TotalPrice" xml:space="preserve">
  <value>Total Price:</value>
</data>
	<data name="Remove" xml:space="preserve">
  <value>Remove</value>
</data>
	<data name="FinalizeOrder" xml:space="preserve">
  <value>Finalize Order</value>
</data>
	<data name="ProductRemovedFromCart" xml:space="preserve">
  <value>Product {0} has been removed from cart.</value>
</data>
	<data name="OrderFinalized" xml:space="preserve">
  <value>Order has been placed. Total price: {0}.</value>
</data>
	<data name="CartEmpty" xml:space="preserve">
  <value>Your cart is empty.</value>
</data>
	<data name="UserMenu" xml:space="preserve">
  <value>User Menu</value>
</data>
	<data name="ShoppingCart" xml:space="preserve">
  <value>Shopping Cart</value>
</data>
	<data name="ViewOrderHistory" xml:space="preserve">
  <value>View Order History</value>
</data>
	<data name="Logout" xml:space="preserve">
  <value>Logout</value>
</data>
	<!-- Elementy interfejsu użytkownika -->
	<data name="Logout" xml:space="preserve">
  <value>Logout</value>
</data>
	<data name="ManageCategories" xml:space="preserve">
  <value>Manage Categories</value>
</data>
	<data name="ManageProducts" xml:space="preserve">
  <value>Manage Products</value>
</data>
	<data name="ManageUsers" xml:space="preserve">
  <value>Manage Users</value>
</data>
	<data name="AddCategory" xml:space="preserve">
  <value>Add Category</value>
</data>
	<data name="RemoveCategory" xml:space="preserve">
  <value>Remove Category</value>
</data>
	<data name="AddProduct" xml:space="preserve">
  <value>Add Product</value>
</data>
	<data name="RemoveProduct" xml:space="preserve">
  <value>Remove Product</value>
</data>
	<data name="CategoryName" xml:space="preserve">
  <value>Category Name</value>
</data>
	<data name="ProductName" xml:space="preserve">
  <value>Product Name</value>
</data>
	<data name="Price" xml:space="preserve">
  <value>Price</value>
</data>
	<data name="Add" xml:space="preserve">
  <value>Add</value>
</data>
	<data name="Remove" xml:space="preserve">
  <value>Remove</value>
</data>
	<data name="RemoveSelected" xml:space="preserve">
  <value>Remove Selected</value>
</data>
	<data name="UserList" xml:space="preserve">
  <value>User List</value>
</data>

	<!-- Komunikaty i walidacja -->
	<data name="PleaseEnterValidCategoryName" xml:space="preserve">
  <value>Please enter a valid category name.</value>
</data>
	<data name="CategoryHasBeenAdded" xml:space="preserve">
  <value>Category '{0}' has been added.</value>
</data>
	<data name="PleaseSelectCategoryToRemove" xml:space="preserve">
  <value>Please select a category to remove.</value>
</data>
	<data name="ConfirmCategoryRemoval" xml:space="preserve">
  <value>Are you sure you want to remove the category '{0}'?</value>
</data>
	<data name="ConfirmDeletion" xml:space="preserve">
  <value>Confirm Deletion</value>
</data>
	<data name="RemovalCancelled" xml:space="preserve">
  <value>Removal cancelled.</value>
</data>
	<data name="CategoryHasBeenRemoved" xml:space="preserve">
  <value>Category '{0}' has been removed.</value>
</data>
	<data name="ProductNameCannotBeEmpty" xml:space="preserve">
  <value>Product name cannot be empty.</value>
</data>
	<data name="PleaseEnterValidPrice" xml:space="preserve">
  <value>Please enter a valid numeric price.</value>
</data>
	<data name="PriceMustBeGreaterThanZero" xml:space="preserve">
  <value>Price must be greater than 0.</value>
</data>
	<data name="PleaseSelectValidCategory" xml:space="preserve">
  <value>Please select a valid category.</value>
</data>
	<data name="ProductHasBeenAdded" xml:space="preserve">
  <value>Product '{0}' has been added successfully.</value>
</data>
	<data name="PleaseSelectProductToRemove" xml:space="preserve">
  <value>Please select a product to remove.</value>
</data>
	<data name="ConfirmProductRemoval" xml:space="preserve">
  <value>Are you sure you want to remove the product '{0}'?</value>
</data>
	<data name="ProductRemovalCancelled" xml:space="preserve">
  <value>Product removal cancelled.</value>
</data>
	<data name="ProductHasBeenRemoved" xml:space="preserve">
  <value>Product '{0}' has been removed.</value>
</data>
	<data name="Error" xml:space="preserve">
  <value>Error</value>
</data>
	<data name="ErrorUserListBoxNull" xml:space="preserve">
  <value>Error: UserListBox is null!</value>
</data>
	<data name="ErrorGetUsersNull" xml:space="preserve">
  <value>Error: GetUsers() returned null!</value>
</data>
	<data name="ErrorLoadingUsers" xml:space="preserve">
  <value>Error loading users: {0}</value>
</data>
</root>